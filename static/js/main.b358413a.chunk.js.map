{"version":3,"sources":["components/Header/Header.tsx","api/CountryAPI.ts","components/Search/Search.tsx","components/CountryCard/CountryCard.tsx","components/CardList/CardList.tsx","pages/Home.tsx","pages/DetailsPage/details-page.tsx","App.tsx","index.tsx"],"names":["Header","setTheme","theme","useContext","ThemeContext","mode","className","onClick","icon","faMoon","API_ROOT","fetchInfo","url","a","axios","get","response","console","log","data","error","fetchAll","fetchBySearch","input","fetchByRegion","region","Search","setData","useRef","useState","displayRegion","setDisplay","e","preventDefault","current","inputVal","value","useEffect","handleRender","onSubmit","faSearch","ref","type","placeholder","Dropdown","Toggle","id","Menu","map","Item","handleSelection","uuidv4","CountryCard","history","newPop","population","toString","replace","push","alpha3Code","src","flag","alt","name","capital","CardList","CountryCardRouter","withRouter","entry","Home","DetailsPage","match","topLevelDomain","alpha2Code","callingCodes","altSpellings","subregion","latlng","demonym","area","gini","timezones","borders","nativeName","numericCode","currencies","code","symbol","languages","iso639_1","iso639_2","translations","de","es","fr","ja","it","br","pt","regionalBlocs","acronym","otherAcronyms","otherNames","cioc","fetchByCode","params","faArrowLeft","currency","join","language","country","createContext","App","Provider","path","exact","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b358413a.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport '../../App.css'\nimport './Header.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMoon } from '@fortawesome/free-solid-svg-icons'\nimport { ThemeContext } from '../../App'\n\ninterface HeaderProps {\n    setTheme: (value: string) => void;\n}\n\nexport const Header: React.FC<HeaderProps> = ({setTheme}) => {\n    const theme = useContext(ThemeContext)\n    const mode = theme === 'light-mode' ? 'Dark Mode' : 'Light Mode'\n\n    function changeTheme(){\n        setTheme(theme === 'light-mode' ? 'dark-mode' : 'light-mode')\n    }\n\n    return (\n        <div className={\"header\"}>\n            <h1>Where in the world?</h1>\n            <div className=\"toggle\" onClick={changeTheme}>\n                <FontAwesomeIcon icon={faMoon}/>\n                <p>{mode}</p>\n            </div>\n        </div>\n    );\n}","import axios from 'axios'\nimport { RestCountries } from '../interfaces/types'\n\nconst API_ROOT = 'https://restcountries.eu';\n\nasync function fetchInfo(url: string){\n    try {\n        const response = await axios.get<RestCountries[]>(url);\n        console.log(response.data);\n        return response.data\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function fetchAll() {\n    const response = await fetchInfo(`${API_ROOT}/rest/v2/all`);\n    return response\n}\n\nasync function fetchBySearch(input: string) {\n    const response = await fetchInfo(`${API_ROOT}/rest/v2/name/${input}`);\n    return response\n}\n\nasync function fetchByRegion(region: string) {\n    const response = await fetchInfo(`${API_ROOT}/rest/v2/region/${region}`);\n    return response\n}\n\nexport {fetchAll, fetchBySearch, fetchByRegion}","import React, {useRef, useState, useEffect} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport './Search.css'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport {fetchAll, fetchBySearch, fetchByRegion} from '../../api/CountryAPI'\nimport { v4 as uuidv4 } from 'uuid';\nimport { RestCountries } from '../../interfaces/types'\n\ninterface SearchProps {\n    // TODO: make an interface of the JSON response instead of using 'any'\n    setData: (value: RestCountries[]) => void;\n}\n\nexport const Search: React.FC<SearchProps> = ({setData}) => {\n    const input = useRef<HTMLInputElement>(null);\n    const [displayRegion, setDisplay] = useState('Filter by Region')\n\n    useEffect(() => {\n        handleRender()\n    }, [])\n\n    async function handleRender() {\n        const data = await fetchAll()\n        data && setData(data)\n    }\n\n    async function handleSearch(e: React.FormEvent) {\n        e.preventDefault();\n        if (input.current === null) return\n        const inputVal = input.current.value\n        const data = await fetchBySearch(inputVal)\n        data && setData(data)\n    }\n\n    async function handleSelection(region: string){\n        setDisplay(region)\n        const data = await fetchByRegion(region)\n        data && setData(data)\n    }\n\n    return (\n        <div className={\"container search-bar\"}>\n            <form className=\"search\" onSubmit={handleSearch}>\n                <FontAwesomeIcon className=\"search-icon\" icon={faSearch} />\n                <input ref={input} type=\"text\" placeholder=\"Search for a country...\"/>\n            </form>\n\n            <Dropdown>\n                <Dropdown.Toggle id=\"dropdown\" className=\"button\">\n                    {displayRegion}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu id='menu'>\n                    {['Americas', 'Africa', 'Asia', 'Europe', 'Oceania'].map((region) => (\n                        <Dropdown.Item id=\"item\" key={uuidv4()} onClick={()=>handleSelection(region)}>{region}</Dropdown.Item>\n                    ))}\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n    );\n}","import React from 'react'\nimport './CountryCard.css'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { RestCountries } from '../../interfaces/types'\n\ninterface CountryCardProps extends RouteComponentProps {\n    data: RestCountries\n}\n\nexport const CountryCard: React.FC<CountryCardProps> = ({data, history}) => {\n    const newPop = data.population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    return (\n        <div className={\"card\"} onClick={() => history.push(`/${data.alpha3Code}`)}>\n            <img src={data.flag} alt=\"\"/>\n            <div className=\"card-body\">\n                <h2>{data.name}</h2>\n                <ul className='card-details'>\n                    <li>\n                        <h4>Population:&nbsp;</h4>\n                        <p>{newPop}</p>\n                    </li>\n                    <li>\n                        <h4>Region:&nbsp;</h4>\n                        <p>{data.region}</p>\n                    </li>\n                    <li>\n                        <h4>Capital:&nbsp;</h4>\n                        <p>{data.capital}</p>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n}","import React from 'react'\nimport {CountryCard} from '../CountryCard/CountryCard'\nimport './CardList.css'\nimport { v4 as uuidv4 } from 'uuid';\nimport { withRouter } from 'react-router-dom';\nimport {RestCountries} from '../../interfaces/types'\n\ninterface CardListProps {\n    data: RestCountries[];\n}\n\nexport const CardList: React.FC<CardListProps> = ({data}) => {\n\n    const CountryCardRouter = withRouter(CountryCard)\n    \n    return (\n        <div className=\"card-list\">\n            {data.map(entry => {\n                return <CountryCardRouter key={uuidv4()} data={entry}/>\n            })}\n        </div>\n    );\n}","import React from 'react'\nimport { Search } from '../components/Search/Search'\nimport {CardList} from '../components/CardList/CardList'\nimport { RestCountries } from '../interfaces/types';\n\ninterface HomeProps {\n    data: RestCountries[];\n    setData: (value: RestCountries[]) => void;\n}\n\nexport const Home: React.FC<HomeProps> = ({setData, data}) => {\n        return (\n            <>\n                <Search setData={setData}/>\n                <CardList data={data}/>\n            </>\n        );\n}","import axios from 'axios';\nimport React, {useEffect, useState} from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { RestCountries } from '../../interfaces/types';\nimport { v4 as uuidv4 } from 'uuid';\nimport './details-page.css'\n\ninterface DetailsPageProps extends RouteComponentProps<{code: 'string'}> {}\n\nexport const DetailsPage: React.FC<DetailsPageProps> = ({match, history}) => {\n    const [data, setData] = useState<RestCountries>(\n      {\n        name: '',\n        topLevelDomain: [],\n        alpha2Code: '',\n        alpha3Code: '',\n        callingCodes: [],\n        capital: '',\n        altSpellings: [],\n        region: '',\n        subregion: '',\n        population: 0,\n        latlng: [0],\n        demonym: '',\n        area: 0,\n        gini: 0,\n        timezones: [],\n        borders: [],\n        nativeName: '',\n        numericCode: '',\n        currencies: [\n          {\n            code: '',\n            name: '',\n            symbol: '',\n          }\n        ],\n        languages: [\n          {\n            iso639_1: '',\n            iso639_2: '',\n            name: '',\n            nativeName: '',\n          }\n        ],\n        translations: {\n          de: '',\n          es: '',\n          fr: '',\n          ja: '',\n          it: '',\n          br: '',\n          pt: '',\n        },\n        flag: '',\n        regionalBlocs: [\n          {\n            acronym: '',\n            name: '',\n            otherAcronyms: [],\n            otherNames: [],\n          },\n          {\n            acronym: '',\n            name: '',\n            otherAcronyms: [],\n            otherNames: [],\n          }\n        ],\n        cioc: '',\n      }\n    )\n\n    useEffect(() => {\n      fetchByCode(match.params.code)\n    }, [match.params.code])\n\n    async function fetchByCode(code: 'string') {\n        try {\n            const response = await axios.get(`https://restcountries.eu/rest/v2/alpha/${code}`);\n            console.log(response.data);\n            setData(response.data)\n          } catch (error) {\n            console.error(error);\n          }\n    }\n\n    const newPop = data.population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    return (\n      <div className=\"container details-page\">\n        <button className=\"back-button button\" onClick={() => history.push(\"/\")}>\n          <FontAwesomeIcon icon={faArrowLeft}/>\n          <h3>Back</h3>\n        </button>\n        <div className=\"info\">\n          <img src={data.flag} alt=\"\"/>\n          <div>\n            <h2>{data.name}</h2>\n            <div className=\"details\">\n              <ul>\n                <li>\n                    <h4>Native Name:&nbsp;</h4>\n                    <p>{data.nativeName}</p>\n                </li>\n                <li>\n                    <h4>Population:&nbsp;</h4>\n                    <p>{newPop}</p>\n                </li>\n                <li>\n                    <h4>Region:&nbsp;</h4>\n                    <p>{data.region}</p>\n                </li>\n                <li>\n                    <h4>Sub Region:&nbsp;</h4>\n                    <p>{data.subregion}</p>\n                </li>\n                <li>\n                    <h4>Capital:&nbsp;</h4>\n                    <p>{data.capital}</p>\n                </li>\n              </ul>\n              <ul>\n                <li>\n                    <h4>Top Level Domain:&nbsp;</h4>\n                    <p>{data.topLevelDomain[0]}</p>\n                </li>\n                <li>\n                    <h4>Currencies:&nbsp;</h4>\n                    <p>{data.currencies.map(currency => currency.name).join(', ')}</p>\n                </li>\n                <li>\n                    <h4>Languages:&nbsp;</h4>\n                    <p>{data.languages.map(language => language.name).join(', ')}</p>\n                </li>\n              </ul>\n            </div>\n            <div className=\"borders\">\n              <h4>Border Countries:&nbsp;</h4>\n              {data.borders.map(country => {\n                return <button className=\"borders-button button\" key={uuidv4()} onClick={() => history.push(`/${country}`)}>\n                  <p>{country}</p>\n                </button>\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\n","import { createContext, useState } from 'react';\nimport './App.css';\nimport { Header } from './components/Header/Header'\nimport {Home} from './pages/Home'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport { DetailsPage } from './pages/DetailsPage/details-page';\nimport { RestCountries } from './interfaces/types';\n\nexport const ThemeContext = createContext('light-mode')\n\nfunction App() {\n  const [theme, setTheme] = useState('light-mode')\n  const [data, setData] = useState<RestCountries[]>([])\n\n  return (\n    <BrowserRouter>\n      <div className={`App ${theme}`}>\n        <ThemeContext.Provider value={theme}>\n          <Header setTheme={setTheme}/>\n          <Switch>\n              <Route path=\"/\" exact render={() => <Home setData={setData} data={data}/>}/>\n              <Route path={\"/:code\"} component={DetailsPage}/>\n          </Switch>\n        </ThemeContext.Provider>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}